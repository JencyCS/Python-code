class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert_at_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node

    def insert_at_beginning(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def delete_node(self, key):
        temp = self.head

        if temp is not None:
            if temp.data == key:
                self.head = temp.next
                temp = None
                return

        while temp is not None:
            if temp.data == key:
                break
            prev = temp
            temp = temp.next

        if temp is None:
            print("The key is not present in the linked list.")
            return

        prev.next = temp.next
        temp = None

    def traverse(self):
        temp = self.head
        if temp is None:
            print("The list is empty.")
            return

        while temp:
            print(temp.data, end=' -> ')
            temp = temp.next
        print('None')

    def display(self):
        if self.head is None:
            print("The linked list is empty.")
            return

        current = self.head
        nodes = []
        while current:
            nodes.append(str(current.data))
            current = current.next
        print("Linked List: " + " -> ".join(nodes) + " -> None")

def main():
    linked_list = LinkedList()

    while True:
        print("\nOptions:")
        print("1. Insert at end")
        print("2. Insert at beginning")
        print("3. Delete a node")
        print("4. Traverse the list")
        print("5. Display the list")
        print("6. Exit")
        choice = int(input("Enter your choice: "))

        if choice == 1:
            data = int(input("Enter the data to insert at end: "))
            linked_list.insert_at_end(data)
        elif choice == 2:
            data = int(input("Enter the data to insert at beginning: "))
            linked_list.insert_at_beginning(data)
        elif choice == 3:
            key = int(input("Enter the data to delete: "))
            linked_list.delete_node(key)
        elif choice == 4:
            linked_list.traverse()
        elif choice == 5:
            linked_list.display()
        elif choice == 6:
            print("Exiting...")
            break
        else:
            print("Invalid choice! Please try again.")

if __name__ == "__main__":
    main()
